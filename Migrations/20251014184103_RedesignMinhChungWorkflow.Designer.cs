// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagement5GoodTempp.DataAccess.Context;

#nullable disable

namespace StudentManagement5Good.Migrations
{
    [DbContext(typeof(StudentManagementDbContext))]
    [Migration("20251014184103_RedesignMinhChungWorkflow")]
    partial class RedesignMinhChungWorkflow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", b =>
                {
                    b.Property<string>("MaCap")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("TenCap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenCap");

                    b.HasKey("MaCap");

                    b.ToTable("CAPXET");

                    b.HasData(
                        new
                        {
                            MaCap = "LOP",
                            TenCap = "Cấp lớp"
                        },
                        new
                        {
                            MaCap = "KHOA",
                            TenCap = "Cấp khoa"
                        },
                        new
                        {
                            MaCap = "TRUONG",
                            TenCap = "Cấp trường"
                        },
                        new
                        {
                            MaCap = "TP",
                            TenCap = "Cấp thành phố"
                        },
                        new
                        {
                            MaCap = "TU",
                            TenCap = "Cấp trung ương"
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.DanhGia", b =>
                {
                    b.Property<string>("MaDG")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maDG");

                    b.Property<bool>("DatTieuChi")
                        .HasColumnType("bit")
                        .HasColumnName("datTieuChi");

                    b.Property<string>("GiaTri")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("giaTri");

                    b.Property<string>("MaCap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("MaTC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTC");

                    b.Property<DateTime>("NgayDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayDanhGia")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NguoiDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nguoiDanhGia");

                    b.HasKey("MaDG");

                    b.HasIndex("MaCap");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.HasIndex("MaTC");

                    b.ToTable("DANHGIA");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaDanhHieu", b =>
                {
                    b.Property<string>("MaKQ")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKQ");

                    b.Property<bool>("DatDanhHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("datDanhHieu");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("MaCap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayDat");

                    b.HasKey("MaKQ");

                    b.HasIndex("MaCap");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.ToTable("KETQUADANHHIEU");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaXetDuyet", b =>
                {
                    b.Property<string>("MaKQ")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKQ");

                    b.Property<string>("DanhSachMinhChung")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("danhSachMinhChung");

                    b.Property<decimal?>("Diem")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("diem");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ghiChu");

                    b.Property<bool>("KetQua")
                        .HasColumnType("bit")
                        .HasColumnName("ketQua");

                    b.Property<string>("LyDoKhongDat")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("lyDoKhongDat");

                    b.Property<string>("MaCap")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maCap");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("MaTC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maTC");

                    b.Property<DateTime>("NgayXetDuyet")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayXetDuyet");

                    b.Property<string>("NguoiXetDuyet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nguoiXetDuyet");

                    b.Property<int>("SoMinhChungDaDuyet")
                        .HasColumnType("int")
                        .HasColumnName("soMinhChungDaDuyet");

                    b.Property<int>("TongSoMinhChung")
                        .HasColumnType("int")
                        .HasColumnName("tongSoMinhChung");

                    b.Property<string>("TrangThaiHoSo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangThaiHoSo");

                    b.Property<string>("XepLoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("xepLoai");

                    b.HasKey("MaKQ");

                    b.HasIndex("MaCap");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.HasIndex("MaTC");

                    b.HasIndex("NguoiXetDuyet");

                    b.ToTable("KETQUAXETDUYET");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKhoa");

                    b.Property<string>("BiThuDoanKhoa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("biThuDoanKhoa");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("MaTruong")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTruong");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayTao");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayThanhLap");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenKhoa");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trangThai");

                    b.Property<string>("TruongKhoa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("truongKhoa");

                    b.HasKey("MaKhoa");

                    b.HasIndex("MaTruong");

                    b.ToTable("KHOA");

                    b.HasData(
                        new
                        {
                            MaKhoa = "CNTT",
                            BiThuDoanKhoa = "ThS. Trần Văn B",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenKhoa = "Công nghệ thông tin",
                            TrangThai = true,
                            TruongKhoa = "PGS.TS Nguyễn Văn A"
                        },
                        new
                        {
                            MaKhoa = "KTXD",
                            BiThuDoanKhoa = "ThS. Lê Thị C",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenKhoa = "Kỹ thuật xây dựng",
                            TrangThai = true,
                            TruongKhoa = "PGS.TS Trần Văn B"
                        },
                        new
                        {
                            MaKhoa = "QTKD",
                            BiThuDoanKhoa = "ThS. Phạm Văn D",
                            MaTruong = "HUST",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenKhoa = "Quản trị kinh doanh",
                            TrangThai = true,
                            TruongKhoa = "TS. Lê Thị C"
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Lop", b =>
                {
                    b.Property<string>("MaLop")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maLop");

                    b.Property<string>("GVCN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GVCN");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKhoa");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenLop");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoa");

                    b.ToTable("LOP");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.MinhChung", b =>
                {
                    b.Property<string>("MaMC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maMC");

                    b.Property<string>("DanhGiaMaDG")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DuongDanFile")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("duongDanFile");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("KetQuaXetDuyetMaKQ")
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("KichThuocFile")
                        .HasColumnType("bigint")
                        .HasColumnName("kichThuocFile");

                    b.Property<string>("LoaiFile")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("loaiFile");

                    b.Property<string>("LyDoTuChoi")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("lyDoTuChoi");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("MaTC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maTC");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayDuyet");

                    b.Property<DateTime>("NgayNop")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayNop");

                    b.Property<string>("NguoiDuyet")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nguoiDuyet");

                    b.Property<string>("TenFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenFile");

                    b.Property<string>("TenMinhChung")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenMinhChung");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("MaMC");

                    b.HasIndex("DanhGiaMaDG");

                    b.HasIndex("KetQuaXetDuyetMaKQ");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.HasIndex("MaTC");

                    b.HasIndex("NguoiDuyet");

                    b.ToTable("MINHCHUNG");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", b =>
                {
                    b.Property<string>("MaNH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2")
                        .HasColumnName("denNgay");

                    b.Property<string>("TenNamHoc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tenNamHoc");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2")
                        .HasColumnName("tuNgay");

                    b.HasKey("MaNH");

                    b.ToTable("NAMHOC", t =>
                        {
                            t.HasCheckConstraint("CK_NamHoc_TuNgay_DenNgay", "tuNgay < denNgay");
                        });

                    b.HasData(
                        new
                        {
                            MaNH = "2023-2024",
                            DenNgay = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNamHoc = "2023-2024",
                            TuNgay = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaNH = "2024-2025",
                            DenNgay = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNamHoc = "2024-2025",
                            TuNgay = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email")
                        .HasAnnotation("RegularExpression", "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hoTen");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maLop");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.HasKey("MaSV");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("MaLop");

                    b.HasIndex("SoDienThoai")
                        .IsUnique()
                        .HasFilter("[soDienThoai] IS NOT NULL");

                    b.ToTable("SINHVIEN");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.ThanhPho", b =>
                {
                    b.Property<string>("MaTP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTP");

                    b.Property<string>("ChuTichDoanTP")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("chuTichDoanTP");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("MaVung")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maVung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayTao");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("TenThanhPho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenThanhPho");

                    b.Property<string>("TenVung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenVung");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trangThai");

                    b.HasKey("MaTP");

                    b.ToTable("THANHPHO");

                    b.HasData(
                        new
                        {
                            MaTP = "HN",
                            ChuTichDoanTP = "Nguyễn Văn Hà",
                            MaVung = "BAC",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenThanhPho = "Hà Nội",
                            TenVung = "Miền Bắc",
                            TrangThai = true
                        },
                        new
                        {
                            MaTP = "HCM",
                            ChuTichDoanTP = "Trần Thị Minh",
                            MaVung = "NAM",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenThanhPho = "Hồ Chí Minh",
                            TenVung = "Miền Nam",
                            TrangThai = true
                        },
                        new
                        {
                            MaTP = "DN",
                            ChuTichDoanTP = "Lê Văn Trung",
                            MaVung = "TRUNG",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenThanhPho = "Đà Nẵng",
                            TenVung = "Miền Trung",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", b =>
                {
                    b.Property<string>("MaTC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTC");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("donViTinh");

                    b.Property<string>("LoaiDuLieu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("loaiDuLieu");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTa");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenTieuChi");

                    b.HasKey("MaTC");

                    b.ToTable("TIEUCHI");

                    b.HasData(
                        new
                        {
                            MaTC = "TC01",
                            DonViTinh = "Có/Không",
                            LoaiDuLieu = "boolean",
                            MoTa = "Có lối sống, đạo đức tốt",
                            TenTieuChi = "Đạo đức tốt"
                        },
                        new
                        {
                            MaTC = "TC02",
                            DonViTinh = "Điểm",
                            LoaiDuLieu = "so",
                            MoTa = "Kết quả học tập xuất sắc",
                            TenTieuChi = "Học tập tốt"
                        },
                        new
                        {
                            MaTC = "TC03",
                            DonViTinh = "Giờ",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia thể thao",
                            TenTieuChi = "Thể lực tốt"
                        },
                        new
                        {
                            MaTC = "TC04",
                            DonViTinh = "Giờ",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia hoạt động tình nguyện",
                            TenTieuChi = "Tình nguyện tốt"
                        },
                        new
                        {
                            MaTC = "TC05",
                            DonViTinh = "Điểm",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia các hoạt động xã hội",
                            TenTieuChi = "Hội nhập tốt"
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.TieuChiYeuCau", b =>
                {
                    b.Property<string>("MaTC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTc")
                        .HasColumnOrder(0);

                    b.Property<string>("MaCap")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap")
                        .HasColumnOrder(1);

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("bit")
                        .HasColumnName("batBuoc");

                    b.Property<string>("MoTaYeuCau")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTaYeuCau");

                    b.Property<float?>("NguongDat")
                        .HasColumnType("real")
                        .HasColumnName("nguongDat");

                    b.HasKey("MaTC", "MaCap");

                    b.HasIndex("MaCap");

                    b.ToTable("TIEUCHIYEUCAU");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Truong", b =>
                {
                    b.Property<string>("MaTruong")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTruong");

                    b.Property<string>("BiThuDoan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("biThuDoan");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("HieuTruong")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hieuTruong");

                    b.Property<string>("LoaiTruong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loaiTruong");

                    b.Property<string>("MaTP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTP");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayTao");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayThanhLap");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("TenTruong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("tenTruong");

                    b.Property<string>("TenVietTat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenVietTat");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trangThai");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("website");

                    b.HasKey("MaTruong");

                    b.HasIndex("MaTP");

                    b.ToTable("TRUONG");

                    b.HasData(
                        new
                        {
                            MaTruong = "UTE",
                            BiThuDoan = "ThS. Trần Văn Bí",
                            HieuTruong = "PGS.TS Nguyễn Văn Hiệu",
                            LoaiTruong = "Đại học",
                            MaTP = "HCM",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenTruong = "Đại học Sư phạm Kỹ thuật TP.HCM",
                            TenVietTat = "UTE",
                            TrangThai = true
                        },
                        new
                        {
                            MaTruong = "HUST",
                            BiThuDoan = "ThS. Nguyễn Thị Bí",
                            HieuTruong = "PGS.TS Lê Văn Hiệu",
                            LoaiTruong = "Đại học",
                            MaTP = "HN",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenTruong = "Đại học Bách khoa Hà Nội",
                            TenVietTat = "HUST",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userId");

                    b.Property<string>("CapQuanLy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("capQuanLy");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hoTen");

                    b.Property<DateTime?>("LanDangNhapCuoi")
                        .HasColumnType("datetime2")
                        .HasColumnName("lanDangNhapCuoi");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKhoa");

                    b.Property<string>("MaLop")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maLop");

                    b.Property<string>("MaSV")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("MaTP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTP");

                    b.Property<string>("MaTruong")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTruong");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayTao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.Property<bool>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangThai");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vaiTro");

                    b.HasKey("UserId");

                    b.HasIndex("CapQuanLy");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("MaKhoa");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaSV");

                    b.HasIndex("MaTP");

                    b.HasIndex("MaTruong");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("USER");

                    b.HasData(
                        new
                        {
                            UserId = "U001",
                            Email = "admin@university.edu.vn",
                            GhiChu = "Tài khoản quản trị mặc định",
                            HoTen = "Quản trị hệ thống",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "jQ3FWcF+tp1pMz4nGBxByN6G12RjozQ8GdmZmKGNl/8=",
                            TrangThai = true,
                            Username = "admin",
                            VaiTro = "ADMIN"
                        },
                        new
                        {
                            UserId = "U002",
                            CapQuanLy = "KHOA",
                            Email = "giaovu.cntt@university.edu.vn",
                            GhiChu = "Giáo vụ khoa Công nghệ thông tin",
                            HoTen = "Giáo vụ CNTT",
                            MaKhoa = "CNTT",
                            MaTP = "HCM",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "EYuwFdNsB9ry7GqGj8bXgKw8vGNKsEc9vt0lxZmV8sE=",
                            TrangThai = true,
                            Username = "giaovu_cntt",
                            VaiTro = "GIAOVU"
                        },
                        new
                        {
                            UserId = "U003",
                            CapQuanLy = "KHOA",
                            Email = "doan.cntt@university.edu.vn",
                            GhiChu = "Đoàn khoa Công nghệ thông tin",
                            HoTen = "Đoàn khoa CNTT",
                            MaKhoa = "CNTT",
                            MaTP = "HCM",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "2mGxKwSGxrMT9xYXGdO2KCK1E+0/lQFB7F8k2WhCn/I=",
                            TrangThai = true,
                            Username = "doankhoa_cntt",
                            VaiTro = "DOANKHOA"
                        },
                        new
                        {
                            UserId = "U004",
                            CapQuanLy = "LOP",
                            Email = "test@university.edu.vn",
                            GhiChu = "Tài khoản test đăng nhập",
                            HoTen = "User Test",
                            MaKhoa = "CNTT",
                            MaTP = "HCM",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "v5sNesN3/GHRx5CKght8kLDb4+9hNFZGoJiWS8fUNhA=",
                            TrangThai = true,
                            Username = "test",
                            VaiTro = "CVHT"
                        },
                        new
                        {
                            UserId = "U005",
                            CapQuanLy = "TRUONG",
                            Email = "doan.truong@ute.edu.vn",
                            GhiChu = "Đoàn trường UTE",
                            HoTen = "Đoàn trường UTE",
                            MaTP = "HCM",
                            MaTruong = "UTE",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "2mGxKwSGxrMT9xYXGdO2KCK1E+0/lQFB7F8k2WhCn/I=",
                            TrangThai = true,
                            Username = "doantruong_ute",
                            VaiTro = "DOANTRUONG"
                        },
                        new
                        {
                            UserId = "U006",
                            CapQuanLy = "TP",
                            Email = "doan.tp@hcm.gov.vn",
                            GhiChu = "Đoàn thành phố Hồ Chí Minh",
                            HoTen = "Đoàn thành phố HCM",
                            MaTP = "HCM",
                            NgayTao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "2mGxKwSGxrMT9xYXGdO2KCK1E+0/lQFB7F8k2WhCn/I=",
                            TrangThai = true,
                            Username = "doantp_hcm",
                            VaiTro = "DOANTP"
                        });
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.DanhGia", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", "CapXet")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", "NamHoc")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", "SinhVien")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", "TieuChi")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("NamHoc");

                    b.Navigation("SinhVien");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaDanhHieu", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", "CapXet")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", "NamHoc")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", "SinhVien")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("NamHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaXetDuyet", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", "CapXet")
                        .WithMany("KetQuaXetDuyets")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", "NamHoc")
                        .WithMany("KetQuaXetDuyets")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", "SinhVien")
                        .WithMany("KetQuaXetDuyets")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", "TieuChi")
                        .WithMany("KetQuaXetDuyets")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.User", "NguoiXetDuyetUser")
                        .WithMany()
                        .HasForeignKey("NguoiXetDuyet")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("NamHoc");

                    b.Navigation("NguoiXetDuyetUser");

                    b.Navigation("SinhVien");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Khoa", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Truong", "Truong")
                        .WithMany("Khoas")
                        .HasForeignKey("MaTruong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Truong");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Lop", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Khoa", "Khoa")
                        .WithMany("Lops")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.MinhChung", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.DanhGia", null)
                        .WithMany("MinhChungs")
                        .HasForeignKey("DanhGiaMaDG");

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaXetDuyet", null)
                        .WithMany("MinhChungs")
                        .HasForeignKey("KetQuaXetDuyetMaKQ");

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", "NamHoc")
                        .WithMany("MinhChungs")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", "SinhVien")
                        .WithMany("MinhChungs")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", "TieuChi")
                        .WithMany("MinhChungs")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.User", "NguoiDuyetUser")
                        .WithMany()
                        .HasForeignKey("NguoiDuyet")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("NamHoc");

                    b.Navigation("NguoiDuyetUser");

                    b.Navigation("SinhVien");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Lop", "Lop")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.TieuChiYeuCau", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", "CapXet")
                        .WithMany("TieuChiYeuCaus")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", "TieuChi")
                        .WithMany("TieuChiYeuCaus")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Truong", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.ThanhPho", "ThanhPho")
                        .WithMany("Truongs")
                        .HasForeignKey("MaTP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ThanhPho");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.User", b =>
                {
                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", "CapXet")
                        .WithMany()
                        .HasForeignKey("CapQuanLy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Khoa", "Khoa")
                        .WithMany("Users")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Lop", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", "SinhVien")
                        .WithMany()
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.ThanhPho", "ThanhPho")
                        .WithMany("Users")
                        .HasForeignKey("MaTP")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StudentManagement5GoodTempp.DataAccess.Entity.Truong", "Truong")
                        .WithMany("Users")
                        .HasForeignKey("MaTruong")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CapXet");

                    b.Navigation("Khoa");

                    b.Navigation("Lop");

                    b.Navigation("SinhVien");

                    b.Navigation("ThanhPho");

                    b.Navigation("Truong");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.CapXet", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");

                    b.Navigation("KetQuaXetDuyets");

                    b.Navigation("TieuChiYeuCaus");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.DanhGia", b =>
                {
                    b.Navigation("MinhChungs");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.KetQuaXetDuyet", b =>
                {
                    b.Navigation("MinhChungs");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Khoa", b =>
                {
                    b.Navigation("Lops");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Lop", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.NamHoc", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");

                    b.Navigation("KetQuaXetDuyets");

                    b.Navigation("MinhChungs");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.SinhVien", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");

                    b.Navigation("KetQuaXetDuyets");

                    b.Navigation("MinhChungs");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.ThanhPho", b =>
                {
                    b.Navigation("Truongs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.TieuChi", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaXetDuyets");

                    b.Navigation("MinhChungs");

                    b.Navigation("TieuChiYeuCaus");
                });

            modelBuilder.Entity("StudentManagement5GoodTempp.DataAccess.Entity.Truong", b =>
                {
                    b.Navigation("Khoas");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
