// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagement5GoodTempp.DataAccess.Context;

#nullable disable

namespace StudentManagement5Good.Migrations
{
    [DbContext(typeof(StudentManagementDbContext))]
    [Migration("20251013080826_create-database")]
    partial class createdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.CapXet", b =>
                {
                    b.Property<string>("MaCap")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("TenCap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenCap");

                    b.HasKey("MaCap");

                    b.ToTable("CAPXET");

                    b.HasData(
                        new
                        {
                            MaCap = "LOP",
                            TenCap = "Cấp lớp"
                        },
                        new
                        {
                            MaCap = "KHOA",
                            TenCap = "Cấp khoa"
                        },
                        new
                        {
                            MaCap = "TRUONG",
                            TenCap = "Cấp trường"
                        },
                        new
                        {
                            MaCap = "TP",
                            TenCap = "Cấp thành phố"
                        },
                        new
                        {
                            MaCap = "TU",
                            TenCap = "Cấp trung ương"
                        });
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.DanhGia", b =>
                {
                    b.Property<string>("MaDG")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maDG");

                    b.Property<bool>("DatTieuChi")
                        .HasColumnType("bit")
                        .HasColumnName("datTieuChi");

                    b.Property<string>("GiaTri")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("giaTri");

                    b.Property<string>("MaCap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("MaTC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTC");

                    b.Property<DateTime>("NgayDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayDanhGia")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NguoiDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nguoiDanhGia");

                    b.HasKey("MaDG");

                    b.HasIndex("MaCap");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.HasIndex("MaTC");

                    b.ToTable("DANHGIA");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.KetQuaDanhHieu", b =>
                {
                    b.Property<string>("MaKQ")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKQ");

                    b.Property<bool>("DatDanhHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("datDanhHieu");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("MaCap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap");

                    b.Property<string>("MaNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngayDat");

                    b.HasKey("MaKQ");

                    b.HasIndex("MaCap");

                    b.HasIndex("MaNH");

                    b.HasIndex("MaSV");

                    b.ToTable("KETQUADANHHIEU");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKhoa");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenKhoa");

                    b.Property<string>("TruongKhoa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("truongKhoa");

                    b.HasKey("MaKhoa");

                    b.ToTable("KHOA");

                    b.HasData(
                        new
                        {
                            MaKhoa = "CNTT",
                            TenKhoa = "Công nghệ thông tin",
                            TruongKhoa = "PGS.TS Nguyễn Văn A"
                        },
                        new
                        {
                            MaKhoa = "KTXD",
                            TenKhoa = "Kỹ thuật xây dựng",
                            TruongKhoa = "PGS.TS Trần Văn B"
                        },
                        new
                        {
                            MaKhoa = "QTKD",
                            TenKhoa = "Quản trị kinh doanh",
                            TruongKhoa = "TS. Lê Thị C"
                        });
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.Lop", b =>
                {
                    b.Property<string>("MaLop")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maLop");

                    b.Property<string>("GVCN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GVCN");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maKhoa");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenLop");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoa");

                    b.ToTable("LOP");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.MinhChung", b =>
                {
                    b.Property<string>("MaMC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maMC");

                    b.Property<string>("DuongDanFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("duongDanFile");

                    b.Property<string>("MaDG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maDG");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTa");

                    b.Property<string>("TenFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenFile");

                    b.HasKey("MaMC");

                    b.HasIndex("MaDG");

                    b.ToTable("MINHCHUNG");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.NamHoc", b =>
                {
                    b.Property<string>("MaNH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maNH");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2")
                        .HasColumnName("denNgay");

                    b.Property<string>("TenNamHoc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tenNamHoc");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2")
                        .HasColumnName("tuNgay");

                    b.HasKey("MaNH");

                    b.ToTable("NAMHOC", t =>
                        {
                            t.HasCheckConstraint("CK_NamHoc_TuNgay_DenNgay", "tuNgay < denNgay");
                        });

                    b.HasData(
                        new
                        {
                            MaNH = "2023-2024",
                            DenNgay = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNamHoc = "2023-2024",
                            TuNgay = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaNH = "2024-2025",
                            DenNgay = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNamHoc = "2024-2025",
                            TuNgay = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maSV");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email")
                        .HasAnnotation("RegularExpression", "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hoTen");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maLop");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.HasKey("MaSV");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("MaLop");

                    b.HasIndex("SoDienThoai")
                        .IsUnique()
                        .HasFilter("[soDienThoai] IS NOT NULL");

                    b.ToTable("SINHVIEN");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.TieuChi", b =>
                {
                    b.Property<string>("MaTC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTC");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("donViTinh");

                    b.Property<string>("LoaiDuLieu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("loaiDuLieu");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTa");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenTieuChi");

                    b.HasKey("MaTC");

                    b.ToTable("TIEUCHI");

                    b.HasData(
                        new
                        {
                            MaTC = "TC01",
                            DonViTinh = "Có/Không",
                            LoaiDuLieu = "boolean",
                            MoTa = "Có lối sống, đạo đức tốt",
                            TenTieuChi = "Đạo đức tốt"
                        },
                        new
                        {
                            MaTC = "TC02",
                            DonViTinh = "Điểm",
                            LoaiDuLieu = "so",
                            MoTa = "Kết quả học tập xuất sắc",
                            TenTieuChi = "Học tập tốt"
                        },
                        new
                        {
                            MaTC = "TC03",
                            DonViTinh = "Giờ",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia thể thao",
                            TenTieuChi = "Thể lực tốt"
                        },
                        new
                        {
                            MaTC = "TC04",
                            DonViTinh = "Giờ",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia hoạt động tình nguyện",
                            TenTieuChi = "Tình nguyện tốt"
                        },
                        new
                        {
                            MaTC = "TC05",
                            DonViTinh = "Điểm",
                            LoaiDuLieu = "so",
                            MoTa = "Tích cực tham gia các hoạt động xã hội",
                            TenTieuChi = "Hội nhập tốt"
                        });
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.TieuChiYeuCau", b =>
                {
                    b.Property<string>("MaTC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maTc")
                        .HasColumnOrder(0);

                    b.Property<string>("MaCap")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("maCap")
                        .HasColumnOrder(1);

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("bit")
                        .HasColumnName("batBuoc");

                    b.Property<string>("MoTaYeuCau")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTaYeuCau");

                    b.Property<float?>("NguongDat")
                        .HasColumnType("real")
                        .HasColumnName("nguongDat");

                    b.HasKey("MaTC", "MaCap");

                    b.HasIndex("MaCap");

                    b.ToTable("TIEUCHIYEUCAU");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.DanhGia", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.CapXet", "CapXet")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.NamHoc", "NamHoc")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.SinhVien", "SinhVien")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.TieuChi", "TieuChi")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("NamHoc");

                    b.Navigation("SinhVien");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.KetQuaDanhHieu", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.CapXet", "CapXet")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.NamHoc", "NamHoc")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaNH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.SinhVien", "SinhVien")
                        .WithMany("KetQuaDanhHieus")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("NamHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.Lop", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.Khoa", "Khoa")
                        .WithMany("Lops")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.MinhChung", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.DanhGia", "DanhGia")
                        .WithMany("MinhChungs")
                        .HasForeignKey("MaDG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhGia");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.SinhVien", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.Lop", "Lop")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.TieuChiYeuCau", b =>
                {
                    b.HasOne("StudentManagement5Good.DataAccess.Entities.CapXet", "CapXet")
                        .WithMany("TieuChiYeuCaus")
                        .HasForeignKey("MaCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement5Good.DataAccess.Entities.TieuChi", "TieuChi")
                        .WithMany("TieuChiYeuCaus")
                        .HasForeignKey("MaTC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapXet");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.CapXet", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");

                    b.Navigation("TieuChiYeuCaus");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.DanhGia", b =>
                {
                    b.Navigation("MinhChungs");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.Khoa", b =>
                {
                    b.Navigation("Lops");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.Lop", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.NamHoc", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.SinhVien", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("KetQuaDanhHieus");
                });

            modelBuilder.Entity("StudentManagement5Good.DataAccess.Entities.TieuChi", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("TieuChiYeuCaus");
                });
#pragma warning restore 612, 618
        }
    }
}
